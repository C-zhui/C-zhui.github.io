"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[457],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),d=a,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(g,o(o({ref:n},c),{},{components:t})):r.createElement(g,o({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6245:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],l={sidebar_position:1},p="\u603b\u7ed3\u4e00\u4e0b\u51e0\u79cd\u6392\u5e8f\u7b97\u6cd5",s={unversionedId:"algo/sort",id:"algo/sort",title:"\u603b\u7ed3\u4e00\u4e0b\u51e0\u79cd\u6392\u5e8f\u7b97\u6cd5",description:"O(n\xb2)\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5",source:"@site/docs/03-algo/sort.md",sourceDirName:"03-algo",slug:"/algo/sort",permalink:"/docs/algo/sort",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Flatten Array",permalink:"/docs/fe/misc/flat"},next:{title:"\u4f18\u5148\u961f\u5217",permalink:"/docs/ds/priorityQueue"}},c=[{value:"O(n\xb2)\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5",id:"on\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5",children:[],level:2},{value:"O(nlogn)\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5",id:"onlogn\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5",children:[],level:2}],m={toc:c};function u(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u603b\u7ed3\u4e00\u4e0b\u51e0\u79cd\u6392\u5e8f\u7b97\u6cd5"},"\u603b\u7ed3\u4e00\u4e0b\u51e0\u79cd\u6392\u5e8f\u7b97\u6cd5"),(0,i.kt)("h2",{id:"on\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5"},"O(n\xb2)\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u63d2\u5165\u6392\u5e8f")),(0,i.kt)("p",null,"\u5916\u5faa\u73af\u4fdd\u8bc1\u7b2c i-1 \u6b21\u5faa\u73af\u540e\u524d i \u4e2a\u6570\u6709\u5e8f\u3002\n\u5185\u5faa\u73af\u4fdd\u8bc1\u5c06\u7b2c j \u4e2a\u6570\u88ab\u63d2\u5165\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <functional>\nusing namespace std;\n\ntemplate <typename T, class Compare>\nvoid insertionSort(T begin,T end,Compare cmp){\n    for(T i = begin+1;i!=end;i++){\n        auto temp = *i;\n        T  j = i-1;\n        for(;j>=begin;j--){\n            if(cmp(temp,*j))\n                *(j+1) = *j;\n            else\n                break;\n        }\n        *(j+1) = temp;\n    }\n}\n\ntemplate <typename T>\nvoid insertionSort(T begin,T end){\n    insertionSort(begin,end,less_equal<decltype(*begin)>());\n}\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"\u5192\u6ce1\u6392\u5e8f")),(0,i.kt)("p",null,"\u5982\u5176\u540d\uff0c\u6bcf\u6b21\u5728\u672a\u6392\u5e8f\u7684\u90e8\u5206\u5c06\u4e00\u4e2a\u6700\u503c\u63a8\u5230\u5df2\u6392\u5e8f\u7684\u4e00\u7aef\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T, class Compare>\nvoid bubbleSort(T  begin,T  end,Compare cmp){\n    for(T i = begin,e = end-1,e2 = end -1;i != e; i++){\n        for(T j = begin;j != e2;j++){\n            if(cmp(*j,*(j+1)));\n            else swap(*j,*(j+1));\n        }\n        e2--;\n    }\n}\n\ntemplate <typename T>\nvoid bubbleSort(T  begin,T  end){\n    bubbleSort(begin,end,less_equal<decltype(*begin)>());\n}\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"\u9009\u62e9\u6392\u5e8f")),(0,i.kt)("p",null,"\u7c7b\u4f3c\u5192\u6ce1\u4f46\u662f\u4e0d\u662f\u6bcf\u6b21\u6bd4\u8f83\u90fd\u4ea4\u6362\uff0c\u800c\u662f\u5728\u672a\u6392\u5e8f\u7684\u90e8\u5206\u9009\u62e9\u4e00\u4e2a\u6700\u503c\u76f4\u63a5\u4ea4\u6362\u5230\u5df2\u6392\u5e8f\u7684\u4e00\u7aef\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T, class Compare>\nvoid selectionSort(T  begin,T  end,Compare cmp){\n    for(T i = begin;i!=end;i++){\n        T  k = i;\n        for(T  j=i;j!=end;j++){\n            if(cmp(*j,*k))\n                k = j;\n        }\n        swap(*i,*k);\n    }\n}\n\ntemplate <typename T>\nvoid selectionSort(T begin,T  end){\n    selectionSort(begin,end,less_equal<decltype(*begin)>());\n}\n")),(0,i.kt)("h2",{id:"onlogn\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5"},"O(nlogn)\u65f6\u95f4\u590d\u6742\u5ea6\u6392\u5e8f\u7b97\u6cd5"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u5feb\u901f\u6392\u5e8f(\u586b\u5751\u5f0f)")),(0,i.kt)("p",null,"\u2460 \u5982\u679c\u533a\u95f4\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e2\uff0c\u5bf9\u4e00\u533a\u95f4\u5df2\u533a\u95f4\u5185\u7684\u67d0\u4e00\u4e2a\u503c\u5212\u5206\u6210\u4e24\u4e2a\u533a\u95f4\u3002"),(0,i.kt)("p",null,"\u2461 \u518d\u5bf9\u8fd9\u4e24\u4e2a\u533a\u95f4\u9012\u5f52\u7684\u6267\u884c \u2460"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T, class Compare>\nvoid __qsort(T  low,T  high,Compare cmp){\n    if (low>=high)return;\n    auto pivot = *low;\n    T   l = low,\n         h = high;\n    while(l<h){\n        while(l<h&&cmp(pivot,*h))h--;\n        *l = *h;\n        while(l<h&&cmp(*l,pivot))l++;\n        *h = *l;\n    }\n    *l = pivot;\n    __qsort(low,l-1,cmp);\n    __qsort(l+1,high,cmp);\n}\n\ntemplate <typename T, class Compare>\nvoid qsort(T begin,T  end,Compare cmp){\n    __qsort(begin,end-1,cmp);\n}\n\ntemplate <typename T>\nvoid qsort(T  begin,T  end){\n    qsort(begin,end,less_equal<decltype(*begin)>());\n}\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"\u5f52\u5e76\u6392\u5e8f(\u81ea\u5e95\u5411\u4e0a)")),(0,i.kt)("p",null,"\u5bf9\u4e8e\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u5e8f\u5217\uff0c\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\u662f\u7ebf\u6027\u590d\u6742\u5ea6\u3002\n\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u5c06\u4e00\u6574\u4e2a\u5e8f\u5217\u5207\u5206\u6210\u5c0f\u5e8f\u5217\uff0c\u9010\u6b65\u589e\u52a0\u5e8f\u5217\u957f\u5ea6\uff0c\u76f8\u90bb\u5e8f\u5217\u4e24\u4e24\u5408\u5e76\u3002\n\u6700\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u6709\u5e8f\u5e8f\u5217"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T, class Compare>\nvoid __merge(T  afrom,T  ato,T  bfrom,T  bto,T  target,Compare cmp){\n    while(afrom<=ato&&bfrom<=bto){\n        if(cmp(*afrom,*bfrom)){\n            *target = *afrom;\n            afrom++;\n        }else {\n            *target = *bfrom;\n            bfrom++;\n        }\n        target++;\n    }\n    while(afrom<=ato){\n        *target = *afrom;\n        afrom++; target++;\n    }\n    while(bfrom<=bto){\n        *target = *bfrom;\n        bfrom++; target++;\n    }\n}\n\ntemplate <typename T, class Compare>\nvoid mergeSort(T  begin,T  end,Compare cmp){\n    T  ord = begin;\n    size_t size = end - begin;\n    auto t = *begin;\n    auto aux = new decltype(t)[size];\n    auto aux2 = new decltype(t)[size];\n    unsigned j = 0;\n    for(T i = begin;i!=end;i++)\n        aux[j++] = *i;\n\n    for(unsigned i = 1;i<size;i+=i){\n        auto *k = aux2;\n        for(unsigned j = 0;j<size;j+=i+i,k+=i+i){\n            unsigned ato = j + i - 1;\n            if(ato>=size)ato = size - 1;\n            unsigned  bto = j + i + i - 1;\n            if(bto>=size)bto = size - 1;\n            __merge(aux+j,aux+ato,aux+ato+1,aux+bto,k,cmp);\n        }\n        swap(aux,aux2);\n    }\n    for(unsigned i = 0;i<size;i++,begin++)\n        *begin = aux[i];\n\n   delete []aux;delete []aux2;\n}\n\ntemplate <typename T>\nvoid mergeSort(T  begin,T  end){\n    mergeSort(begin,end,less_equal<decltype(*begin)>());\n}\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"\u5806\u6392\u5e8f")),(0,i.kt)("p",null,"\u5229\u7528\u5806\u7ed3\u6784\u8fdb\u884c\u52a8\u6001\u6392\u5e8f\u7684\u65b9\u6cd5\u3002\u5806\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4fdd\u8bc1\u4e86\u5728\u4efb\u610f\u65f6\u523b\u5168\u90e8\u7236\u8282\u70b9\u7684\u503c\u5927\u4e8e\uff08\u6216\u5c0f\u4e8e\uff09\u4e24\u4e2a\u5b50\u8282\u70b9\u3002\u6839\u8282\u70b9\u5c31\u662f\u4e00\u4e2a\u6700\u5927\uff08\u5c0f\uff09\u503c\uff0c\u6bcf\u6b21\u53d6\u51fa\u6839\u8282\u70b9\uff0c\u5c31\u518d\u5c06\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u653e\u5230\u6839\u8282\u70b9\u4e0b\u6c89\u4fdd\u8bc1\u5806\u7684\u7279\u6027\u3002\u8fde\u7eed\u5730\u53d6\u51fa\u6839\u8282\u70b9\u5c31\u53ef\u4ee5\u5f97\u5230\u6392\u5e8f\u597d\u7684\u5e8f\u5217\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"template<typename T, class Compare>\nvoid sink(T& arr,unsigned i,unsigned size,const Compare& cmp){\n    unsigned j = i+i,\n             k = i;\n    while(j<=size){\n        if(cmp(arr[k],arr[j]))\n            k = j;\n        j++;\n        if(j<=size&&cmp(arr[k],arr[j]))\n            k = j;\n        if(i!=k){\n            swap(arr[k],arr[i]);\n            i = k;\n            j = k+k;\n        }\n        else break;\n    }\n}\n\ntemplate<typename T, class Compare>\nvoid heapSort(T& arr,unsigned size,const Compare& cmp){\n    size--;\n    for(unsigned i = size/2;i!=0;i--)\n        sink(arr,i,size,cmp);\n    while(size!=0){\n        if(cmp(arr[1],arr[0]))\n            swap(arr[0],arr[1]);\n        swap(arr[size--],arr[1]);\n        sink(arr,1,size,cmp);\n    }\n}\n\ntemplate<typename T>\nvoid heapSort(T &arr,unsigned size){\n   heapSort(arr,size,less_equal<decltype(arr[0])>());\n}\n\n")),(0,i.kt)("p",null,"\u4e0a\u8ff0\u7684\u7b97\u6cd5\u4e2d,\u5806\u6392\u5e8f\u5fc5\u987b\u4ee5",(0,i.kt)("inlineCode",{parentName:"p"},"  heapSort(arr,sz);"),"\uff0c\u5176\u4e2darr\u662f\u53ef\u4ee5\u8fdb\u884c\u968f\u673a\u4e0b\u6807\u8bbf\u95ee\u64cd\u4f5c\u7684\u5bf9\u8c61\uff0c\u5373\u539f\u751f\u6570\u7ec4\u3001vector\u3001array\u7c7b\u578b,",(0,i.kt)("inlineCode",{parentName:"p"},"sz"),"\u662f\u5927\u5c0f\u3002"),(0,i.kt)("p",null,"\u5176\u4f59\u7684\u90fd\u53ef\u4ee5\u4f7f\u7528\u5f62\u5982",(0,i.kt)("inlineCode",{parentName:"p"},"XXXsort.(begin(sequence),end(sequence))"),"\n\u6216\n",(0,i.kt)("inlineCode",{parentName:"p"},"XXXsort.(begin(sequence),end(sequence),[](const eletype& a,const eletype&b){return a.xx<b.xx})"),"\u7684\u6807\u51c6\u5e93sort\u5f62\u5f0f\u3002"))}u.isMDXComponent=!0}}]);